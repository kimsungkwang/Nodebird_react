{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/kimsungkwang/WORKSPACE/Nodejs/Nodebird_react/prepare/front/components/PostCard.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport { Card, Popover, Button, Avatar } from \"antd\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\nimport PostImages from \"./PostImages\";\n\n// 기획 후 코딩\nvar PostCard = function PostCard(_ref) {\n  _s();\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }); // ?. 옵셔널 체이닝 연산자\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 28\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })));\n};\n_s(PostCard, \"FJdoDJNyUlJ5WKWdRipc5DguCUQ=\", false, function () {\n  return [useSelector];\n});\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    // 객체들의 배열\n    Images: PropTypes.arrayOf(PropTypes.object) // 객체들의 배열\n  }).isRequired\n};\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["Card","Popover","Button","Avatar","React","PropTypes","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","useSelector","PostImages","PostCard","post","id","state","user","me","marginBottom","Images","liked","onToggleLike","User","nickname","content","propTypes","shape","number","object","string","createAt","Comments","arrayOf","isRequired"],"sources":["/Users/kimsungkwang/WORKSPACE/Nodejs/Nodebird_react/prepare/front/components/PostCard.js"],"sourcesContent":["import { Card, Popover, Button, Avatar } from \"antd\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\n\nimport PostImages from \"./PostImages\";\n\n// 기획 후 코딩\nconst PostCard = ({ post }) => {\n  const id = useSelector((state) => state.user.me?.id); // ?. 옵셔널 체이닝 연산자\n  return (\n    <div style={{ marginBottom: 0 }}>\n      <Card\n        cover={post.Images[0] && <PostImages images={post.Images} />}\n        actions={[\n          <RetweetOutlined key=\"retweet\" />,\n          liked ? (\n            <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\n          ) : (\n            <HeartOutlined key=\"heart\" onClick={onToggleLike} />\n          ),\n          <MessageOutlined key=\"comment\" />,\n          <Popover\n            key=\"more\"\n            content={\n              <Button.Group>\n                {id && post.User.id === id ? (\n                  <>\n                    <Button>수정</Button>\n                    <Button type=\"danger\">삭제</Button>\n                  </>\n                ) : (\n                  <Button>신고</Button>\n                )}\n              </Button.Group>\n            }>\n            <EllipsisOutlined />\n          </Popover>,\n        ]}>\n        <Card.Meta avatar={<Avatar>{post.User.nickname[0]}</Avatar>} title={post.User.nickname} description={post.content} />\n      </Card>\n      {/* <CommentForm />\n      <Comments /> */}\n    </div>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object), // 객체들의 배열\n    Images: PropTypes.arrayOf(PropTypes.object), // 객체들의 배열\n  }).isRequired,\n};\n\nexport default PostCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}