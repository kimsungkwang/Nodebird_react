{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/kimsungkwang/WORKSPACE/Nodejs/Nodebird_react/prepare/front/components/PostCard.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport { Card, Popover, Button, Avatar } from \"antd\";\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from \"prop-types\";\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\nimport PostImages from \"./PostImages\";\n\n// 기획 후 코딩\nvar PostCard = function PostCard(_ref) {\n  _s();\n  var post = _ref.post;\n  var _useState = useState(false),\n    liked = _useState[0],\n    setLiked = _useState[1];\n  var _useState2 = useState(false),\n    commentFormOpened = _useState2[0],\n    setCommentFormOpened = _useState2[1];\n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }); // ?. 옵셔널 체이닝 연산자\n\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 28\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })));\n};\n_s(PostCard, \"xmPNEqGnZdWXz9RSAzXy1xxF838=\", false, function () {\n  return [useSelector];\n});\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    // 객체들의 배열\n    Images: PropTypes.arrayOf(PropTypes.object) // 객체들의 배열\n  }).isRequired\n};\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["Card","Popover","Button","Avatar","React","useState","useCallback","PropTypes","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","useSelector","PostImages","PostCard","post","liked","setLiked","commentFormOpened","setCommentFormOpened","id","state","user","me","onToggleLike","prev","marginBottom","Images","User","nickname","content","propTypes","shape","number","object","string","createAt","Comments","arrayOf","isRequired"],"sources":["/Users/kimsungkwang/WORKSPACE/Nodejs/Nodebird_react/prepare/front/components/PostCard.js"],"sourcesContent":["import { Card, Popover, Button, Avatar } from \"antd\";\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from \"prop-types\";\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\n\nimport PostImages from \"./PostImages\";\n\n// 기획 후 코딩\nconst PostCard = ({ post }) => {\n  const [liked, setLiked] = useState(false);\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n  const id = useSelector((state) => state.user.me?.id); // ?. 옵셔널 체이닝 연산자\n\n  const onToggleLike = useCallback(() => {\n    setLiked((prev) => !prev);\n  }, []);\n\n  return (\n    <div style={{ marginBottom: 0 }}>\n      <Card\n        cover={post.Images[0] && <PostImages images={post.Images} />}\n        actions={[\n          <RetweetOutlined key=\"retweet\" />,\n          liked ? (\n            <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\n          ) : (\n            <HeartOutlined key=\"heart\" onClick={onToggleLike} />\n          ),\n          <MessageOutlined key=\"comment\" />,\n          <Popover\n            key=\"more\"\n            content={\n              <Button.Group>\n                {id && post.User.id === id ? (\n                  <>\n                    <Button>수정</Button>\n                    <Button type=\"danger\">삭제</Button>\n                  </>\n                ) : (\n                  <Button>신고</Button>\n                )}\n              </Button.Group>\n            }>\n            <EllipsisOutlined />\n          </Popover>,\n        ]}>\n        <Card.Meta avatar={<Avatar>{post.User.nickname[0]}</Avatar>} title={post.User.nickname} description={post.content} />\n      </Card>\n      {/* <CommentForm />\n      <Comments /> */}\n    </div>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object), // 객체들의 배열\n    Images: PropTypes.arrayOf(PropTypes.object), // 객체들의 배열\n  }).isRequired,\n};\n\nexport default PostCard;\n"],"mappings":";;;;AAAA,SAASA,IAAI,EAAEC,OAAO,EAAEC,MAAM,EAAEC,MAAM,QAAQ,MAAM;AACpD,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,eAAe,EAAEC,YAAY,EAAEC,aAAa,EAAEC,eAAe,EAAEC,gBAAgB,QAAQ,mBAAmB;AACnH,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAOC,UAAU,MAAM,cAAc;;AAErC;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,OAAiB;EAAA;EAAA,IAAXC,IAAI,QAAJA,IAAI;EACtB,gBAA0BX,QAAQ,CAAC,KAAK,CAAC;IAAlCY,KAAK;IAAEC,QAAQ;EACtB,iBAAkDb,QAAQ,CAAC,KAAK,CAAC;IAA1Dc,iBAAiB;IAAEC,oBAAoB;EAC9C,IAAMC,EAAE,GAAGR,WAAW,CAAC,UAACS,KAAK;IAAA;IAAA,yBAAKA,KAAK,CAACC,IAAI,CAACC,EAAE,mDAAb,eAAeH,EAAE;EAAA,EAAC,CAAC,CAAC;;EAEtD,IAAMI,YAAY,GAAGnB,WAAW,CAAC,YAAM;IACrCY,QAAQ,CAAC,UAACQ,IAAI;MAAA,OAAK,CAACA,IAAI;IAAA,EAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,OACE;IAAK,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC9B,MAAC,IAAI;IACH,KAAK,EAAEX,IAAI,CAACY,MAAM,CAAC,CAAC,CAAC,IAAI,MAAC,UAAU;MAAC,MAAM,EAAEZ,IAAI,CAACY,MAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAI;IAC7D,OAAO,EAAE,CACP,MAAC,eAAe;MAAC,GAAG,EAAC,SAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,EACjCX,KAAK,GACH,MAAC,YAAY;MAAC,YAAY,EAAC,SAAS;MAAC,GAAG,EAAC,OAAO;MAAC,OAAO,EAAEQ,YAAa;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,GAE1E,MAAC,aAAa;MAAC,GAAG,EAAC,OAAO;MAAC,OAAO,EAAEA,YAAa;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAClD,EACD,MAAC,eAAe;MAAC,GAAG,EAAC,SAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,EACjC,MAAC,OAAO;MACN,GAAG,EAAC,MAAM;MACV,OAAO,EACL,MAAC,MAAM,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACVJ,EAAE,IAAIL,IAAI,CAACa,IAAI,CAACR,EAAE,KAAKA,EAAE,GACxB,4BACE,MAAC,MAAM;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,kBAAY,EACnB,MAAC,MAAM;QAAC,IAAI,EAAC,QAAQ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,kBAAY,CAChC,GAEH,MAAC,MAAM;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,kBACR,CAEJ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACD,MAAC,gBAAgB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CACZ,CACV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACF,MAAC,IAAI,CAAC,IAAI;IAAC,MAAM,EAAE,MAAC,MAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAEL,IAAI,CAACa,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAW;IAAC,KAAK,EAAEd,IAAI,CAACa,IAAI,CAACC,QAAS;IAAC,WAAW,EAAEd,IAAI,CAACe,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAChH,CAGH;AAEV,CAAC;AAAC,GA5CIhB,QAAQ;EAAA,QAGDF,WAAW;AAAA;AAAA,KAHlBE,QAAQ;AA8CdA,QAAQ,CAACiB,SAAS,GAAG;EACnBhB,IAAI,EAAET,SAAS,CAAC0B,KAAK,CAAC;IACpBZ,EAAE,EAAEd,SAAS,CAAC2B,MAAM;IACpBL,IAAI,EAAEtB,SAAS,CAAC4B,MAAM;IACtBJ,OAAO,EAAExB,SAAS,CAAC6B,MAAM;IACzBC,QAAQ,EAAE9B,SAAS,CAAC4B,MAAM;IAC1BG,QAAQ,EAAE/B,SAAS,CAACgC,OAAO,CAAChC,SAAS,CAAC4B,MAAM,CAAC;IAAE;IAC/CP,MAAM,EAAErB,SAAS,CAACgC,OAAO,CAAChC,SAAS,CAAC4B,MAAM,CAAC,CAAE;EAC/C,CAAC,CAAC,CAACK;AACL,CAAC;AAED,eAAezB,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}