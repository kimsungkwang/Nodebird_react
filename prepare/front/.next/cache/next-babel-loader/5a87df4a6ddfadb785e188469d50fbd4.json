{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    Usdr: {\n      id: 1,\n      nickname: 홍길동\n    },\n    content: \"첫 번째 게시글 #해시태그 #익스프레스\",\n    Image: [{}],\n    Comment: [{\n      User: {\n        nickname: \"zero\"\n      },\n      content: \"안녕하세요 \"\n    }, {\n      User: {\n        nickname: \"one\"\n      },\n      content: \"ㅋㅋㅋ\"\n    }]\n  }],\n  imagePaths: [],\n  postAdded: false\n};\nconst ADD_POST = \"ADD_POST\";\nexport const addPost = {\n  type: ADD_POST\n};\nconst dummyPost = {\n  id: 2,\n  content: \"더미데이터\",\n  User: {\n    id: 1,\n    nickname: \"김성광\"\n  },\n  Images: [],\n  Comment: []\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      return _objectSpread({}, state);\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["initialState","mainPosts","id","Usdr","nickname","홍길동","content","Image","Comment","User","imagePaths","postAdded","ADD_POST","addPost","type","dummyPost","Images","reducer","state","action"],"sources":["/Users/kimsungkwang/WORKSPACE/Nodejs/Nodebird_react/prepare/front/reducers/post.js"],"sourcesContent":["export const initialState = {\n  mainPosts: [\n    {\n      id: 1,\n      Usdr: {\n        id: 1,\n        nickname: 홍길동,\n      },\n      content: \"첫 번째 게시글 #해시태그 #익스프레스\",\n      Image: [{}],\n      Comment: [\n        {\n          User: {\n            nickname: \"zero\",\n          },\n          content: \"안녕하세요 \",\n        },\n        {\n          User: {\n            nickname: \"one\",\n          },\n          content: \"ㅋㅋㅋ\",\n        },\n      ],\n    },\n  ],\n  imagePaths: [],\n  postAdded: false,\n};\n\nconst ADD_POST = \"ADD_POST\";\nexport const addPost = {\n  type: ADD_POST,\n};\nconst dummyPost = {\n  id: 2,\n  content: \"더미데이터\",\n  User: {\n    id: 1,\n    nickname: \"김성광\",\n  },\n  Images: [],\n  Comment: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      return { \n        ...state,\n        \n      }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"],"mappings":";;;AAAA,OAAO,MAAMA,YAAY,GAAG;EAC1BC,SAAS,EAAE,CACT;IACEC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;MACJD,EAAE,EAAE,CAAC;MACLE,QAAQ,EAAEC;IACZ,CAAC;IACDC,OAAO,EAAE,uBAAuB;IAChCC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;IACXC,OAAO,EAAE,CACP;MACEC,IAAI,EAAE;QACJL,QAAQ,EAAE;MACZ,CAAC;MACDE,OAAO,EAAE;IACX,CAAC,EACD;MACEG,IAAI,EAAE;QACJL,QAAQ,EAAE;MACZ,CAAC;MACDE,OAAO,EAAE;IACX,CAAC;EAEL,CAAC,CACF;EACDI,UAAU,EAAE,EAAE;EACdC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,QAAQ,GAAG,UAAU;AAC3B,OAAO,MAAMC,OAAO,GAAG;EACrBC,IAAI,EAAEF;AACR,CAAC;AACD,MAAMG,SAAS,GAAG;EAChBb,EAAE,EAAE,CAAC;EACLI,OAAO,EAAE,OAAO;EAChBG,IAAI,EAAE;IACJP,EAAE,EAAE,CAAC;IACLE,QAAQ,EAAE;EACZ,CAAC;EACDY,MAAM,EAAE,EAAE;EACVR,OAAO,EAAE;AACX,CAAC;AAED,MAAMS,OAAO,GAAG,CAACC,KAAK,GAAGlB,YAAY,EAAEmB,MAAM,KAAK;EAChD,QAAQA,MAAM,CAACL,IAAI;IACjB,KAAKF,QAAQ;MACX,yBACKM,KAAK;IAGZ;MACE,OAAOA,KAAK;EAAC;AAEnB,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}