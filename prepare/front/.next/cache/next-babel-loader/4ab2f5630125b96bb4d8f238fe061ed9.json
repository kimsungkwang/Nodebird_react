{"ast":null,"code":"import { all, fork, put } from \"redux-saga/effects\";\nimport axios from \"axios\";\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data\n      }\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"names":["all","fork","put","axios","addPostAPI","data","post","addPost","action","delay","id","shortId","generate","type","ADD_POST_SUCCESS","content","ADD_POST_TO_ME","err","console","error","ADD_POST_FAILURE","response","watchAddPost","takeLatest","ADD_POST_REQUEST","postSaga"],"sources":["/Users/kimsungkwang/WORKSPACE/Nodejs/Nodebird_react/prepare/front/sagas/post.js"],"sourcesContent":["import { all, fork, put } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data,\n      },\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction* watchAddPost() {\n    yield takeLatest(ADD_POST_REQUEST, addPost);\n  }\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,IAAI,EAAEC,GAAG,QAAQ,oBAAoB;AACnD,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,UAAU,CAACC,IAAI,EAAE;EACxB,OAAOF,KAAK,CAACG,IAAI,CAAC,WAAW,EAAED,IAAI,CAAC;AACtC;AAEA,UAAUE,OAAO,CAACC,MAAM,EAAE;EACxB,IAAI;IACF;IACA,MAAMC,KAAK,CAAC,IAAI,CAAC;IACjB,MAAMC,EAAE,GAAGC,OAAO,CAACC,QAAQ,EAAE;IAC7B,MAAMV,GAAG,CAAC;MACRW,IAAI,EAAEC,gBAAgB;MACtBT,IAAI,EAAE;QACJK,EAAE;QACFK,OAAO,EAAEP,MAAM,CAACH;MAClB;IACF,CAAC,CAAC;IACF,MAAMH,GAAG,CAAC;MACRW,IAAI,EAAEG,cAAc;MACpBX,IAAI,EAAEK;IACR,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOO,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClB,MAAMf,GAAG,CAAC;MACRW,IAAI,EAAEO,gBAAgB;MACtBf,IAAI,EAAEY,GAAG,CAACI,QAAQ,CAAChB;IACrB,CAAC,CAAC;EACJ;AACF;AAEA,UAAUiB,YAAY,GAAG;EACrB,MAAMC,UAAU,CAACC,gBAAgB,EAAEjB,OAAO,CAAC;AAC7C;AAEF,eAAe,UAAUkB,QAAQ,GAAG;EAClC,MAAMzB,GAAG,CAAC,CAACC,IAAI,CAACqB,YAAY,CAAC,CAAC,CAAC;AACjC"},"metadata":{},"sourceType":"module"}