{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"김성광\"\n    },\n    content: \"첫 번째 게시글 #해시태그 #익스프레스\",\n    Images: [{}],\n    Comment: [{\n      User: {\n        nickname: \"zero\"\n      },\n      content: \"안녕하세요 \"\n    }, {\n      User: {\n        nickname: \"one\"\n      },\n      content: \"ㅋㅋㅋ\"\n    }]\n  }],\n  imagePaths: [],\n  addPostLoding: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoding: false,\n  addCommentDone: false,\n  addCommetError: null\n};\n\n// export const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\n// export const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\n// export const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\n\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\n\n// export const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\n// export const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\n// export const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\nconst dummyPost = {\n  id: 2,\n  content: \"더미데이터\",\n  User: {\n    id: 1,\n    nickname: \"김성광\"\n  },\n  Images: [],\n  Comment: []\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoding: true,\n        addPostDone: false,\n        addPostError: null\n      });\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost, ...state.mainPosts],\n        addPostLoding: false,\n        addPostDone: true\n      });\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoding: false,\n        addPostError: action.error\n      });\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoding: true,\n        addCommentDone: false,\n        addCommetError: null\n      });\n    case ADD_COMMENT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoding: false,\n        addCommentDone: true\n      });\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoding: false,\n        addCommentError: action.error\n      });\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["initialState","mainPosts","id","User","nickname","content","Images","Comment","imagePaths","addPostLoding","addPostDone","addPostError","addCommentLoding","addCommentDone","addCommetError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","reducer","state","action","error","addCommentError"],"sources":["/Users/kimsungkwang/WORKSPACE/Nodejs/Nodebird_react/prepare/front/reducers/post.js"],"sourcesContent":["export const initialState = {\n  mainPosts: [\n    {\n      id: 1,\n      User: {\n        id: 1,\n        nickname: \"김성광\",\n      },\n      content: \"첫 번째 게시글 #해시태그 #익스프레스\",\n      Images: [{}],\n      Comment: [\n        {\n          User: {\n            nickname: \"zero\",\n          },\n          content: \"안녕하세요 \",\n        },\n        {\n          User: {\n            nickname: \"one\",\n          },\n          content: \"ㅋㅋㅋ\",\n        },\n      ],\n    },\n  ],\n  imagePaths: [],\n\n  addPostLoding: false,\n  addPostDone: false,\n  addPostError: null,\n\n  addCommentLoding: false,\n  addCommentDone: false,\n  addCommetError: null,\n};\n\n// export const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\n// export const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\n// export const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\n\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\n\n// export const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\n// export const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\n// export const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\n\nexport const addPost = (data) => ({\n  type: ADD_POST_REQUEST,\n  data,\n});\n\nexport const addComment = (data) => ({\n  type: ADD_COMMENT_REQUEST,\n  data,\n});\n\nconst dummyPost = {\n  id: 2,\n  content: \"더미데이터\",\n  User: {\n    id: 1,\n    nickname: \"김성광\",\n  },\n  Images: [],\n  Comment: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return {\n        ...state,\n        addPostLoding: true,\n        addPostDone: false,\n        addPostError: null,\n      };\n    case ADD_POST_SUCCESS:\n      return {\n        ...state,\n        mainPosts: [dummyPost, ...state.mainPosts],\n        addPostLoding: false,\n        addPostDone: true,\n      };\n    case ADD_POST_FAILURE:\n      return {\n        ...state,\n        addPostLoding: false,\n        addPostError: action.error,\n      };\n\n    case ADD_COMMENT_REQUEST:\n      return {\n        ...state,\n        addCommentLoding: true,\n        addCommentDone: false,\n        addCommetError: null,\n      };\n    case ADD_COMMENT_SUCCESS:\n      return {\n        ...state,\n        addCommentLoding: false,\n        addCommentDone: true,\n      };\n    case ADD_COMMENT_FAILURE:\n      return {\n        ...state,\n        addCommentLoding: false,\n        addCommentError: action.error,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"],"mappings":";;;AAAA,OAAO,MAAMA,YAAY,GAAG;EAC1BC,SAAS,EAAE,CACT;IACEC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;MACJD,EAAE,EAAE,CAAC;MACLE,QAAQ,EAAE;IACZ,CAAC;IACDC,OAAO,EAAE,uBAAuB;IAChCC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;IACZC,OAAO,EAAE,CACP;MACEJ,IAAI,EAAE;QACJC,QAAQ,EAAE;MACZ,CAAC;MACDC,OAAO,EAAE;IACX,CAAC,EACD;MACEF,IAAI,EAAE;QACJC,QAAQ,EAAE;MACZ,CAAC;MACDC,OAAO,EAAE;IACX,CAAC;EAEL,CAAC,CACF;EACDG,UAAU,EAAE,EAAE;EAEdC,aAAa,EAAE,KAAK;EACpBC,WAAW,EAAE,KAAK;EAClBC,YAAY,EAAE,IAAI;EAElBC,gBAAgB,EAAE,KAAK;EACvBC,cAAc,EAAE,KAAK;EACrBC,cAAc,EAAE;AAClB,CAAC;;AAED;AACA;AACA;;AAEA,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;;AAElD;AACA;AACA;;AAEA,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AAExD,OAAO,MAAMC,OAAO,GAAIC,IAAI,KAAM;EAChCC,IAAI,EAAER,gBAAgB;EACtBO;AACF,CAAC,CAAC;AAEF,OAAO,MAAME,UAAU,GAAIF,IAAI,KAAM;EACnCC,IAAI,EAAEL,mBAAmB;EACzBI;AACF,CAAC,CAAC;AAEF,MAAMG,SAAS,GAAG;EAChBvB,EAAE,EAAE,CAAC;EACLG,OAAO,EAAE,OAAO;EAChBF,IAAI,EAAE;IACJD,EAAE,EAAE,CAAC;IACLE,QAAQ,EAAE;EACZ,CAAC;EACDE,MAAM,EAAE,EAAE;EACVC,OAAO,EAAE;AACX,CAAC;AAED,MAAMmB,OAAO,GAAG,CAACC,KAAK,GAAG3B,YAAY,EAAE4B,MAAM,KAAK;EAChD,QAAQA,MAAM,CAACL,IAAI;IACjB,KAAKR,gBAAgB;MACnB,uCACKY,KAAK;QACRlB,aAAa,EAAE,IAAI;QACnBC,WAAW,EAAE,KAAK;QAClBC,YAAY,EAAE;MAAI;IAEtB,KAAKK,gBAAgB;MACnB,uCACKW,KAAK;QACR1B,SAAS,EAAE,CAACwB,SAAS,EAAE,GAAGE,KAAK,CAAC1B,SAAS,CAAC;QAC1CQ,aAAa,EAAE,KAAK;QACpBC,WAAW,EAAE;MAAI;IAErB,KAAKO,gBAAgB;MACnB,uCACKU,KAAK;QACRlB,aAAa,EAAE,KAAK;QACpBE,YAAY,EAAEiB,MAAM,CAACC;MAAK;IAG9B,KAAKX,mBAAmB;MACtB,uCACKS,KAAK;QACRf,gBAAgB,EAAE,IAAI;QACtBC,cAAc,EAAE,KAAK;QACrBC,cAAc,EAAE;MAAI;IAExB,KAAKK,mBAAmB;MACtB,uCACKQ,KAAK;QACRf,gBAAgB,EAAE,KAAK;QACvBC,cAAc,EAAE;MAAI;IAExB,KAAKO,mBAAmB;MACtB,uCACKO,KAAK;QACRf,gBAAgB,EAAE,KAAK;QACvBkB,eAAe,EAAEF,MAAM,CAACC;MAAK;IAEjC;MACE,OAAOF,KAAK;EAAC;AAEnB,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}