{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/kimsungkwang/WORKSPACE/Nodejs/Nodebird_react/prepare/front/components/PostCard.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport { Card, Popover, Button } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from \"@ant-design/icons/lib/icons/RetweetOutlined\";\nimport { useSelector } from \"react-redux\";\n\n// 기획 후 코딩\nvar PostCard = function PostCard(_ref) {\n  _s();\n  var post = _ref.post;\n  var _useSelector = useSelector(function (state) {\n      var _state$user$me;\n      return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n    }),\n    me = _useSelector.me; // ?. 옵셔널 체이닝 연산자\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Image[0] && __jsx(PostImage, {\n      Images: post.Image,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 33\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }), __jsx(HeartOutlined, {\n      key: \"heart\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }\n      }, id && post.User.id, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 38\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, \"\\uC0AD\\uC81C\"), __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(Image, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), __jsx(Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })), __jsx(CommentForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), __jsx(Comments, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n};\n_s(PostCard, \"9V1uf3383/tS6kXOMMR8c8sBgP4=\", false, function () {\n  return [useSelector];\n});\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    // 객체들의 배열 \n    Images: PropTypes.arrayOf(PropTypes.object) // 객체들의 배열 \n  }).isRequired\n};\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["Card","Popover","Button","Content","React","PropTypes","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","useSelector","PostCard","post","state","user","me","id","Image","User","propTypes","shape","number","object","content","string","createAt","Comments","arrayOf","Images","isRequired"],"sources":["/Users/kimsungkwang/WORKSPACE/Nodejs/Nodebird_react/prepare/front/components/PostCard.js"],"sourcesContent":["import { Card, Popover, Button } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  RetweetOutlined,\n  HeartTwoTone,\n  HeartOutlined,\n  MessageOutlined,\n  EllipsisOutlined,\n} from \"@ant-design/icons/lib/icons/RetweetOutlined\";\nimport { useSelector } from \"react-redux\";\n\n// 기획 후 코딩\nconst PostCard = ({ post }) => {\n  const { me } = useSelector((state) => state.user.me?.id);     // ?. 옵셔널 체이닝 연산자\n  return (\n    <div>\n      <Card\n        cover={post.Image[0] && <PostImage Images={post.Image} />}\n        actions={[\n          <RetweetOutlined key=\"retweet\" />,\n          <HeartOutlined key=\"heart\" />,\n          <MessageOutlined key=\"comment\" />,\n          <Popover\n            key=\"more\"\n            content={\n              <Button.Group>\n                {id && post.User.id }<Button>수정</Button>\n                <Button type=\"danger\">삭제</Button>\n                <Button>신고</Button>\n              </Button.Group>\n            }>\n            <EllipsisOutlined />\n          </Popover>,\n        ]}>\n        <Image />\n        <Content />\n      </Card>\n      <CommentForm />\n      <Comments />\n    </div>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n      id: PropTypes.number,\n      User: PropTypes.object,\n      content: PropTypes.string,\n      createAt: PropTypes.object,\n      Comments: PropTypes.arrayOf(PropTypes.object),        // 객체들의 배열 \n      Images: PropTypes.arrayOf(PropTypes.object),        // 객체들의 배열 \n  }).isRequired,\n};\n\nexport default PostCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}