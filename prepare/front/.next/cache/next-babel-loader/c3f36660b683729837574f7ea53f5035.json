{"ast":null,"code":"import { all, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nfunction logInAPI(data) {\n  return axios.post(\"/api/login\", data);\n}\nfunction* logIn(action) {\n  try {\n    console.log(\"saga logIn\");\n    // const result = yield call(logInAPI);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction* watchLogIn() {\n  yield takeLatest(\"LOG_IN_REQUEST\", logIn);\n}\nfunction* watchLogOut() {\n  yield takeLatest(\"LOG_OUT_REQUEST\", logout);\n}\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"names":["all","delay","fork","put","takeLatest","axios","logInAPI","data","post","logIn","action","console","log","type","LOG_IN_SUCCESS","err","error","LOG_IN_FAILURE","response","logOutAPI","logOut","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","watchLogIn","watchLogOut","logout","userSaga"],"sources":["/Users/kimsungkwang/WORKSPACE/Nodejs/Nodebird_react/prepare/front/sagas/user.js"],"sourcesContent":["import { all, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction logInAPI(data) {\n  return axios.post(\"/api/login\", data);\n}\n\nfunction* logIn(action) {\n  try {\n    console.log(\"saga logIn\");\n    // const result = yield call(logInAPI);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(\"LOG_IN_REQUEST\", logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(\"LOG_OUT_REQUEST\", logout);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,KAAK,EAAEC,IAAI,EAAEC,GAAG,EAAEC,UAAU,QAAQ,oBAAoB;AACtE,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,QAAQ,CAACC,IAAI,EAAE;EACtB,OAAOF,KAAK,CAACG,IAAI,CAAC,YAAY,EAAED,IAAI,CAAC;AACvC;AAEA,UAAUE,KAAK,CAACC,MAAM,EAAE;EACtB,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzB;IACA,MAAMX,KAAK,CAAC,IAAI,CAAC;IACjB,MAAME,GAAG,CAAC;MACRU,IAAI,EAAEC,cAAc;MACpBP,IAAI,EAAEG,MAAM,CAACH;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOQ,GAAG,EAAE;IACZJ,OAAO,CAACK,KAAK,CAACD,GAAG,CAAC;IAClB,MAAMZ,GAAG,CAAC;MACRU,IAAI,EAAEI,cAAc;MACpBD,KAAK,EAAED,GAAG,CAACG,QAAQ,CAACX;IACtB,CAAC,CAAC;EACJ;AACF;AAEA,SAASY,SAAS,GAAG;EACnB,OAAOd,KAAK,CAACG,IAAI,CAAC,aAAa,CAAC;AAClC;AAEA,UAAUY,MAAM,GAAG;EACjB,IAAI;IACF;IACA,MAAMnB,KAAK,CAAC,IAAI,CAAC;IACjB,MAAME,GAAG,CAAC;MACRU,IAAI,EAAEQ;IACR,CAAC,CAAC;EACJ,CAAC,CAAC,OAAON,GAAG,EAAE;IACZJ,OAAO,CAACK,KAAK,CAACD,GAAG,CAAC;IAClB,MAAMZ,GAAG,CAAC;MACRU,IAAI,EAAES,eAAe;MACrBN,KAAK,EAAED,GAAG,CAACG,QAAQ,CAACX;IACtB,CAAC,CAAC;EACJ;AACF;AAEA,UAAUgB,UAAU,GAAG;EACrB,MAAMnB,UAAU,CAAC,gBAAgB,EAAEK,KAAK,CAAC;AAC3C;AAEA,UAAUe,WAAW,GAAG;EACtB,MAAMpB,UAAU,CAAC,iBAAiB,EAAEqB,MAAM,CAAC;AAC7C;AAEA,eAAe,UAAUC,QAAQ,GAAG;EAClC,MAAM1B,GAAG,CAAC,CAACE,IAAI,CAACqB,UAAU,CAAC,EAAErB,IAAI,CAACsB,WAAW,CAAC,CAAC,CAAC;AAClD"},"metadata":{},"sourceType":"module"}