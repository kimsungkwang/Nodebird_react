{"ast":null,"code":"import { all, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nfunction logInAPI(data) {\n  return axios.post(\"/api/login\", data);\n}\nfunction* logIn(action) {\n  try {\n    console.log(\"saga logIn\");\n    // const result = yield call(logInAPI);\n    yield delay(1000);\n    yield put({\n      type: \"LOG_IN_SUCCESS\",\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: \"LOG_IN_FAILURE\",\n      error: err.response.data\n    });\n  }\n}\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\nfunction* logOut(action) {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: \"LOG_OUT_SUCCESS\"\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: \"LOG_OUT_FAILURE\",\n      error: err.response.data\n    });\n  }\n}\nfunction* watchLogIn() {\n  yield takeLatest(\"LOG_IN_REQUEST\", logIn);\n}\nfunction* watchLogOut() {\n  yield takeLatest(\"LOG_OUT_REQUEST\", logOut);\n}\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"names":["all","delay","fork","put","takeLatest","axios","logInAPI","data","post","logIn","action","console","log","type","err","error","response","logOutAPI","logOut","watchLogIn","watchLogOut","userSaga"],"sources":["/Users/kimsungkwang/WORKSPACE/Nodejs/Nodebird_react/prepare/front/sagas/user.js"],"sourcesContent":["import { all, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction logInAPI(data) {\n  return axios.post(\"/api/login\", data);\n}\n\nfunction* logIn(action) {\n  try {\n    console.log(\"saga logIn\");\n    // const result = yield call(logInAPI);\n    yield delay(1000);\n    yield put({\n      type: \"LOG_IN_SUCCESS\",\n      data: action.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: \"LOG_IN_FAILURE\",\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* logOut(action) {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: \"LOG_OUT_SUCCESS\",\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: \"LOG_OUT_FAILURE\",\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(\"LOG_IN_REQUEST\", logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(\"LOG_OUT_REQUEST\", logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,KAAK,EAAEC,IAAI,EAAEC,GAAG,EAAEC,UAAU,QAAQ,oBAAoB;AACtE,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,QAAQ,CAACC,IAAI,EAAE;EACtB,OAAOF,KAAK,CAACG,IAAI,CAAC,YAAY,EAAED,IAAI,CAAC;AACvC;AAEA,UAAUE,KAAK,CAACC,MAAM,EAAE;EACtB,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzB;IACA,MAAMX,KAAK,CAAC,IAAI,CAAC;IACjB,MAAME,GAAG,CAAC;MACRU,IAAI,EAAE,gBAAgB;MACtBN,IAAI,EAAEG,MAAM,CAACH;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOO,GAAG,EAAE;IACZH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC;IAClB,MAAMX,GAAG,CAAC;MACRU,IAAI,EAAE,gBAAgB;MACtBE,KAAK,EAAED,GAAG,CAACE,QAAQ,CAACT;IACtB,CAAC,CAAC;EACJ;AACF;AAEA,SAASU,SAAS,GAAG;EACnB,OAAOZ,KAAK,CAACG,IAAI,CAAC,aAAa,CAAC;AAClC;AAEA,UAAUU,MAAM,CAACR,MAAM,EAAE;EACvB,IAAI;IACF;IACA,MAAMT,KAAK,CAAC,IAAI,CAAC;IACjB,MAAME,GAAG,CAAC;MACRU,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC;IAClB,MAAMX,GAAG,CAAC;MACRU,IAAI,EAAE,iBAAiB;MACvBE,KAAK,EAAED,GAAG,CAACE,QAAQ,CAACT;IACtB,CAAC,CAAC;EACJ;AACF;AAEA,UAAUY,UAAU,GAAG;EACrB,MAAMf,UAAU,CAAC,gBAAgB,EAAEK,KAAK,CAAC;AAC3C;AAEA,UAAUW,WAAW,GAAG;EACtB,MAAMhB,UAAU,CAAC,iBAAiB,EAAEc,MAAM,CAAC;AAC7C;AAEA,eAAe,UAAUG,QAAQ,GAAG;EAClC,MAAMrB,GAAG,CAAC,CAACE,IAAI,CAACiB,UAAU,CAAC,EAAEjB,IAAI,CAACkB,WAAW,CAAC,CAAC,CAAC;AAClD"},"metadata":{},"sourceType":"module"}