{"ast":null,"code":"var _jsxFileName = \"/Users/kimsungkwang/WORKSPACE/Nodejs/Nodebird_react/prepare/front/components/PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Card, Button, Avatar, List, Comment, Popover } from 'antd';\nimport PropTypes from 'prop-types';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport Link from 'next/link';\n\n// import CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport PostImages from './PostImages';\n// import FollowButton from './FollowButton';\n// import { REMOVE_POST_REQUEST } from '../reducers/post';\n\nconst CardWrapper = styled.div`\n  margin-bottom: 20px;\n`;\nconst PostCard = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    removePostLoading\n  } = useSelector(state => state.post);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    me\n  } = useSelector(state => state.user);\n  const id = me && me.id;\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const onRemovePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  return __jsx(CardWrapper, {\n    key: post.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"message\",\n      onClick: onToggleComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"ellipsis\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }\n      }, id && post.UserId === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 23\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        loading: removePostLoading,\n        onClick: onRemovePost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 23\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }))],\n    extra: __jsx(FollowButton, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 16\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: __jsx(PostCardContent, {\n      postData: post.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 24\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })), commentFormOpened && __jsx(React.Fragment, null, __jsx(CommentForm, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), __jsx(List, {\n    header: `${post.Comments ? post.Comments.length : 0} 댓글`,\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments || [],\n    renderItem: item => __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, __jsx(Comment, {\n      author: item.User.nickname,\n      avatar: __jsx(Link, {\n        href: {\n          pathname: '/user',\n          query: {\n            id: item.User.id\n          }\n        },\n        as: `/user/${item.User.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 23\n        }\n      }, __jsx(Avatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 26\n        }\n      }, item.User.nickname[0]))),\n      content: item.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })));\n};\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    UserId: PropTypes.number,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.any),\n    Images: PropTypes.arrayOf(PropTypes.any)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"names":["React","useState","useCallback","Card","Button","Avatar","List","Comment","Popover","PropTypes","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","useSelector","useDispatch","styled","Link","PostCardContent","PostImages","CardWrapper","div","PostCard","post","dispatch","removePostLoading","state","commentFormOpened","setCommentFormOpened","liked","setLiked","me","user","id","onToggleComment","prev","onToggleLike","onRemovePost","type","REMOVE_POST_REQUEST","data","Images","UserId","User","nickname","content","Comments","length","item","pathname","query","propTypes","shape","number","object","string","createdAt","arrayOf","any","isRequired"],"sources":["/Users/kimsungkwang/WORKSPACE/Nodejs/Nodebird_react/prepare/front/components/PostCard.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Card, Button, Avatar, List, Comment, Popover } from 'antd';\nimport PropTypes from 'prop-types';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport Link from 'next/link';\n\n// import CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport PostImages from './PostImages';\n// import FollowButton from './FollowButton';\n// import { REMOVE_POST_REQUEST } from '../reducers/post';\n\nconst CardWrapper = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst PostCard = ({ post }) => {\n  const dispatch = useDispatch();\n  const { removePostLoading } = useSelector((state) => state.post);\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n  const [liked, setLiked] = useState(false);\n  const { me } = useSelector((state) => state.user);\n  const id = me && me.id;\n\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened((prev) => !prev);\n  }, []);\n\n  const onToggleLike = useCallback(() => {\n    setLiked((prev) => !prev);\n  }, []);\n\n  const onRemovePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id,\n    });\n  }, []);\n\n  return (\n    <CardWrapper key={post.id}>\n      <Card\n        cover={post.Images[0] && <PostImages images={post.Images} />}\n        actions={[\n          <RetweetOutlined key=\"retweet\" />,\n          liked\n            ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\n            : <HeartOutlined key=\"heart\" onClick={onToggleLike} />,\n          <MessageOutlined key=\"message\" onClick={onToggleComment} />,\n          <Popover\n            key=\"ellipsis\"\n            content={(\n              <Button.Group>\n                {id && post.UserId === id\n                  ? (\n                    <>\n                      <Button>수정</Button>\n                      <Button type=\"danger\" loading={removePostLoading} onClick={onRemovePost}>삭제</Button>\n                    </>\n                  )\n                  : <Button>신고</Button>}\n              </Button.Group>\n            )}\n          >\n            <EllipsisOutlined />\n          </Popover>,\n        ]}\n        extra={<FollowButton post={post} />}\n      >\n        <Card.Meta\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n          title={post.User.nickname}\n          description={<PostCardContent postData={post.content} />}\n        />\n      </Card>\n      {commentFormOpened && (\n        <>\n          <CommentForm post={post} />\n          <List\n            header={`${post.Comments ? post.Comments.length : 0} 댓글`}\n            itemLayout=\"horizontal\"\n            dataSource={post.Comments || []}\n            renderItem={(item) => (\n              <li>\n                <Comment\n                  author={item.User.nickname}\n                  avatar={(\n                    <Link href={{ pathname: '/user', query: { id: item.User.id } }} as={`/user/${item.User.id}`}>\n                      <a><Avatar>{item.User.nickname[0]}</Avatar></a>\n                    </Link>\n                  )}\n                  content={item.content}\n                />\n              </li>\n            )}\n          />\n        </>\n      )}\n    </CardWrapper>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    UserId: PropTypes.number,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.any),\n    Images: PropTypes.arrayOf(PropTypes.any),\n  }).isRequired,\n};\n\nexport default PostCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}