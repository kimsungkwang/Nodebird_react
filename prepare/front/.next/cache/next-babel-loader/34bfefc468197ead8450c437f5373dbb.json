{"ast":null,"code":"var _jsxFileName = \"/Users/kimsungkwang/WORKSPACE/Nodejs/Nodebird_react/prepare/front/components/CommentForm.js\";\nvar __jsx = React.createElement;\nimport { Button, Form, Input } from 'antd';\nimport React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    addCommentDone,\n    addCommentLoading\n  } = useSelector(state => state.post);\n  const id = useSelector(state => {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        userId: id,\n        postId: post.id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    rows: 4,\n    value: commentText,\n    onChange: onChangeCommentText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: addCommentLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"\\uC090\\uC57D\")));\n};\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"names":["Button","Form","Input","React","useCallback","useEffect","PropTypes","useDispatch","useSelector","useInput","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","addCommentDone","addCommentLoading","state","id","user","me","commentText","onChangeCommentText","setCommentText","onSubmitComment","type","data","content","userId","postId","position","margin","right","bottom","propTypes","object","isRequired"],"sources":["/Users/kimsungkwang/WORKSPACE/Nodejs/Nodebird_react/prepare/front/components/CommentForm.js"],"sourcesContent":["import { Button, Form, Input } from 'antd';\nimport React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport useInput from '../hooks/useInput';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nconst CommentForm = ({ post }) => {\n  const dispatch = useDispatch();\n  const { addCommentDone, addCommentLoading } = useSelector((state) => state.post);\n  const id = useSelector((state) => state.user.me?.id);\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n\n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: { content: commentText, userId: id, postId: post.id },\n    });\n  }, [commentText, id]);\n\n  return (\n    <Form onFinish={onSubmitComment}>\n      <Form.Item style={{ position: 'relative', margin: 0 }}>\n        <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText} />\n        <Button\n          style={{ position: 'absolute', right: 0, bottom: -40 }}\n          type=\"primary\"\n          htmlType=\"submit\"\n          loading={addCommentLoading}\n        >삐약\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,MAAM;AAC1C,OAAOC,KAAK,IAAIC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AACrD,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,SAASC,mBAAmB,QAAQ,kBAAkB;AAEtD,MAAMC,WAAW,GAAG,CAAC;EAAEC;AAAK,CAAC,KAAK;EAChC,MAAMC,QAAQ,GAAGN,WAAW,EAAE;EAC9B,MAAM;IAAEO,cAAc;IAAEC;EAAkB,CAAC,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACJ,IAAI,CAAC;EAChF,MAAMK,EAAE,GAAGT,WAAW,CAAEQ,KAAK;IAAA;IAAA,yBAAKA,KAAK,CAACE,IAAI,CAACC,EAAE,mDAAb,eAAeF,EAAE;EAAA,EAAC;EACpD,MAAM,CAACG,WAAW,EAAEC,mBAAmB,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEvEJ,SAAS,CAAC,MAAM;IACd,IAAIS,cAAc,EAAE;MAClBQ,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC,EAAE,CAACR,cAAc,CAAC,CAAC;EAEpB,MAAMS,eAAe,GAAGnB,WAAW,CAAC,MAAM;IACxCS,QAAQ,CAAC;MACPW,IAAI,EAAEd,mBAAmB;MACzBe,IAAI,EAAE;QAAEC,OAAO,EAAEN,WAAW;QAAEO,MAAM,EAAEV,EAAE;QAAEW,MAAM,EAAEhB,IAAI,CAACK;MAAG;IAC5D,CAAC,CAAC;EACJ,CAAC,EAAE,CAACG,WAAW,EAAEH,EAAE,CAAC,CAAC;EAErB,OACE,MAAC,IAAI;IAAC,QAAQ,EAAEM,eAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC9B,MAAC,IAAI,CAAC,IAAI;IAAC,KAAK,EAAE;MAAEM,QAAQ,EAAE,UAAU;MAAEC,MAAM,EAAE;IAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACpD,MAAC,KAAK,CAAC,QAAQ;IAAC,IAAI,EAAE,CAAE;IAAC,KAAK,EAAEV,WAAY;IAAC,QAAQ,EAAEC,mBAAoB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAC9E,MAAC,MAAM;IACL,KAAK,EAAE;MAAEQ,QAAQ,EAAE,UAAU;MAAEE,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE,CAAC;IAAG,CAAE;IACvD,IAAI,EAAC,SAAS;IACd,QAAQ,EAAC,QAAQ;IACjB,OAAO,EAAEjB,iBAAkB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAEpB,CACC,CACP;AAEX,CAAC;AAEDJ,WAAW,CAACsB,SAAS,GAAG;EACtBrB,IAAI,EAAEN,SAAS,CAAC4B,MAAM,CAACC;AACzB,CAAC;AAED,eAAexB,WAAW"},"metadata":{},"sourceType":"module"}