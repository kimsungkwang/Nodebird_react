{"ast":null,"code":"// import { applyMiddleware, createStore, compose } from \"redux\";\n// import createSagaMiddleware from \"redux-saga\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducer from \"../reducers\";\n// import rootSaga from \"../sagas\";\n\nconst configureStore = context => {\n  console.log(context);\n  //   const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","composeWithDevTools","reducer","configureStore","context","console","log","middlewares","sagaMiddleware","enhancer","compose","applyMiddleware","store","createStore","sagaTask","run","rootSaga","wrapper","debug"],"sources":["/Users/kimsungkwang/WORKSPACE/Nodejs/Nodebird_react/prepare/front/store/ConfigureStore.js"],"sourcesContent":["// import { applyMiddleware, createStore, compose } from \"redux\";\n// import createSagaMiddleware from \"redux-saga\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport reducer from \"../reducers\";\n// import rootSaga from \"../sagas\";\n\nconst configureStore = (context) => {\n  console.log(context);\n//   const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancer =\n    process.env.NODE_ENV === \"production\" ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, { debug: process.env.NODE_ENV === \"development\" });\n\nexport default wrapper;\n"],"mappings":"AAAA;AACA;AACA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,OAAOC,OAAO,MAAM,aAAa;AACjC;;AAEA,MAAMC,cAAc,GAAIC,OAAO,IAAK;EAClCC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EACtB;EACE,MAAMG,WAAW,GAAG,CAACC,cAAc,CAAC;EACpC,MAAMC,QAAQ,GACZ,QAAwCC,OAAO,CAACC,eAAe,CAAC,GAAGJ,WAAW,CAAC,CAAC,GAAGN,mBAAmB,CAACU,eAAe,CAAC,GAAGJ,WAAW,CAAC,CAAC;EACzI,MAAMK,KAAK,GAAGC,WAAW,CAACX,OAAO,EAAEO,QAAQ,CAAC;EAC5CG,KAAK,CAACE,QAAQ,GAAGN,cAAc,CAACO,GAAG,CAACC,QAAQ,CAAC;EAC7C,OAAOJ,KAAK;AACd,CAAC;AAED,MAAMK,OAAO,GAAGjB,aAAa,CAACG,cAAc,EAAE;EAAEe,KAAK;AAAyC,CAAC,CAAC;AAEhG,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}